Line 8
/* router.post("/stored", (req, res) => {
    console.log(req.body);
    const user = new Stored();
    user.save().then(() => {
        res.status(201).send(user);
    }).catch((e) => {
        res.status(400).send(e);
    })
}) */

Line 9
/* router.post('/', (req,res) => {
    const text = {

        translate_From: req.body.translate_From,
        translate_To: req.body.translate_To 
    }
    res.status(201).json({
        message: 'Handling POST request to /text',
        createdText: text
    });
}); */

Line 11

    //req.body.text req.body.lang

    // translate(req.body.text, {to: req.body.lang}).then(r => {
    //     console.log(r.text);
    //     res.status(200).send({
    //         translatedText: r.text
    //     })
    //     //=> I speak English
    //     //console.log(res.from.language.iso);
    //     //=> nl
    // }).catch(err => {
    //     console.error(err);
    //     res.status(400).send({
    //         error: err
    //     })
    // });

Line 26
/* for (var i = 0; i < req.body.lang.length; i++) {
            const r = await translate(req.body.text, { to: req.body.lang[i]});

            console.log(r.text);

            const user = new Stored({ text: req.body.text, lang: req.body.lang[i], translatedText: r.text });
            user.save().then(() => {
                res.status(201).send(user);
            }).catch((e) => {
                res.status(400).send(e);
            })
        } */